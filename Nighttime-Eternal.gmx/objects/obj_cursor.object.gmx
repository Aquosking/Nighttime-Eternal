<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selectedChar = noone;
clickedChar = noone;
movePath = noone;
tempStamina = 0;
global.cursor = id;
pathGraphics = noone;
storeNode = noone;
menu = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Places in game cursor at mouse
switch(global.game.state) {
    case "selecting":
    case "movement":
    case "action":
        x = (mouse_x div 32) * 32;// attach object 3 to mouse x location
        y = (mouse_y div 32) * 32;// attach object 3 to mouse y location
        break;
    case "menu":
    case "animating":
    default:
        break;
}
if (x &lt; 0) x = 0;
if (y &lt; 0) y = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Pony selection and clicking

// Update your selection every step
cursor_select_pony(id, x, y);

// If you click the mouse, call the click event script
if (mouse_check_button_pressed(mb_left)) {
    cursor_click(id);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Build move paths when in the movement state
if (global.game.state == "movement") {
    if (clickedChar != noone &amp;&amp; movePath != noone) {
        var node = move_map_get_node(x, y, clickedChar);
        if (node != noone &amp;&amp; node != storeNode) {
            if (node.head) {
                move_path_clear(movePath);
            }
            else {
                var retreadTile = move_path_node_retread(movePath, node)
                if (retreadTile != noone) {
                    /* Delete all tiles after this one */
                    move_path_clear_after(movePath, retreadTile)
                }
                else if (move_path_node_is_valid(movePath, node)) {
                    move_path_add(movePath, node);
                }
                else {
                    move_path_clear(movePath)
                    most_efficient_path(movePath, node, clickedChar);
                }
            }
        }
        
        storeNode = node;
    }
    else {
        show_debug_message("Invalid game state: In the movement state either without a clicked character or move path.")
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
