<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.zoomLevel = 1;

view_hport[0] = view_hview[0];
view_wport[0] = view_wview[0];

scr_view_zoom(global.zoomLevel, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move the view
var view = 0;
var up = keyboard_check(ord("W"))
var down = keyboard_check(ord("S"))
var left = keyboard_check(ord("A"))
var right = keyboard_check(ord("D"))
var zoomIn = mouse_wheel_up() || keyboard_check_pressed(ord("I"))
var zoomOut = mouse_wheel_down() || keyboard_check_pressed(ord("O"))

var upBound = 0;
var downBound = room_height;
var leftBound = 0;
var rightBound = room_width + (global.guiWidth/global.zoomLevel);

var amount = view_wview[view]/80

if (up) &amp;&amp; (view_yview[view] &gt; upBound) {
    view_yview[view] -= amount;
    if (view_yview[view] &lt; upBound) {
        view_yview[view] = upBound
    }
}

if (down) &amp;&amp; (view_yview[view] + view_hview[view] &lt; downBound) {
    view_yview[view] += amount;
    if (view_yview[view] + view_hview[view] &gt; downBound) {
        view_yview[view] = downBound - view_hview[view];
    }
}

if (left) &amp;&amp; (view_xview[view] &gt; leftBound) {
    view_xview[view] -= amount;
    if (view_xview[view] &lt; leftBound) {
        view_xview[view] = leftBound;
    }
}

if (right) &amp;&amp; (view_xview[view] + view_wview[view] &lt; rightBound) {
    view_xview[view] += amount;
    if (view_xview[view] + view_wview[view] &gt; rightBound) {
        view_xview[view] = rightBound - view_wview[view]
    }
}
   
/// control the zoom
if (zoomIn) {
    if (global.zoomLevel &lt; 4) {
        global.zoomLevel += 1;
        scr_view_zoom(global.zoomLevel, view);
    }
}

if (zoomOut) {
    if (global.zoomLevel &gt; 1) {
        global.zoomLevel -= 1;
        rightBound = room_width + (global.guiWidth/global.zoomLevel);
        scr_view_zoom(global.zoomLevel, view);
        if (view_yview[view] + view_hview[view] &gt; downBound) {
            view_yview[view] = downBound - view_hview[view]
        }
        if (view_xview[view] + view_wview[view] &gt; rightBound) {
           view_xview[view] = rightBound - view_wview[view]
        }        
        if (view_yview[view] &lt; upBound) {
            view_yview[view] = upBound;
        }
        if (view_xview[view] &lt; leftBound) {
           view_xview[view] = leftBound;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
